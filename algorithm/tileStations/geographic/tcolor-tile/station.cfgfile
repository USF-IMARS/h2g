<?xml version="1.0" encoding="UTF-8"?>
<!-- With very few exceptions, parameters that are internal to this script begin with "cfg_".  Avoid that prefix in your parameters, please -->
<CONFIGURE>
  <SETUP>
    <Ncs_set name="tileID" value="TILEIDHOLDER"/>
    <Ncs_set name="tileno" value="TILENUMBERHOLDER"/>
    <!-- set this to "true" to enable really verbose debugging -->
    <Ncs_set name="cfg_debug" value="false"/>
    <!-- cfg_ncs_home comes from JSW config, cfg_nisgs_home should be up one level -->
    <Ncs_set name="cfg_nisgs_home" value="{cfg_ncs_home}{/}.."/>
    <!-- site.properties file (which is in cfg_ncs_home/..) -->
    <Ncs_readFile file="{cfg_nisgs_home}{/}site.properties"/>
    <!-- required by DSM:  -->
    <Ncs_set name="cfg_stationName" value="CREFL True Color"/>
    <Ncs_set name="cfg_groupTag" value="CREFL {tileID} True Color"/>
    <Ncs_set name="cfg_siteName" value="{NISGS_SITE_NAME}"/>
    <Ncs_set name="dataDirectory" value="{DSM_DATA_DIRECTORY}"/>
    <Ncs_set name="cfg_stationLog" value="station.stationlog"/>
    <!--  Initialize wrapped algorithm   -->
    <Ncs_print text="Initializing algorithm CREFL {tileID} True Color"/>
    <InitAlgorithm debug="{cfg_debug}"
      file="{cfg_nisgs_home}/SPA/h2g/wrapper/h2g/installation.xml" result="cfg_algo.OBJ"/>
    <Ncs_print text="Algorithm CREFL {tileID} True Color initialized"/>
    <Ncs_set name="version" value="CREFL {tileID} True Color"/>
  </SETUP>
  <EXECUTE>
    <!-- get first input product  -->
    <!--Go get the matching product-->
    <Ncs_set name="sat" value="%"/>
    <Ncs_log text="Reserving product drl.{sat}.modis.mxd021km"/>
    <!--Note that here, and only here, does the {wildcard} have the right SQL value-->
    <Ncs_set name="otherInputTypes" value="drl.aquaterra.modis.creflhkm_{tileno} drl.aquaterra.modis.geo_{tileno}"/>
    <Dsm_command class="DSM" debug="{cfg_debug}"
      method="reserveProductLikeProductType" result="cfg_wild.OBJ">
      <String value="drl.%.modis.mxd021km"/>
      <String value="{otherInputTypes}"/>
    </Dsm_command>
    <!-- get product type-->
    <Dsm_command class="cfg_wild.OBJ" debug="{cfg_debug}"
      method="getProductType" result="cfg_prodtype"/>
    <!--Chop off everything but the wild text-->
    <Ncs_set name="sat" value="{cfg_prodtype}"/>
    <Ncs_editValue name="{sat}" pattern="^drl." replacement="" result="sat"/>
    <Ncs_editValue name="{sat}" pattern=".modis.mxd021km$"
      replacement="" result="sat"/>
    <!--And put the product object where it belongs-->
    <Ncs_log text="Putting reserved object where it belongs"/>
    <Ncs_copy copy="drl.{sat}.modis.mxd021km.OBJ" source="cfg_wild.OBJ"/>
    <!-- Put the reserved product object into "reservedProduct" -->
    <!-- (so NCS can find it to fail this job if needed) -->
    <Ncs_copy copy="reservedProduct" source="drl.{sat}.modis.mxd021km.OBJ"/>
    <!-- get pass  -->
    <Ncs_log text="Getting pass for drl.{sat}.modis.mxd021km"/>
    <Dsm_command class="drl.{sat}.modis.mxd021km.OBJ"
      debug="{cfg_debug}" method="getPass" result="cfg_pass"/>
    <!-- get date  -->
    <Ncs_log text="Getting date/time"/>
    <Dsm_command class="drl.{sat}.modis.mxd021km.OBJ"
      debug="{cfg_debug}" method="getStartTime" result="cfg_starttime"/>
    <Dsm_command class="drl.{sat}.modis.mxd021km.OBJ"
      debug="{cfg_debug}" method="getStopTime" result="cfg_stoptime"/>
    <!-- Extract the hour, and munge it for quarter-day -->
    <Ncs_date debug="{cfg_debug}" getValue="cfg_quarterday"
      name="cfg_starttime" pattern="HH"/>
    <Ncs_editValue debug="{cfg_debug}" name="{cfg_quarterday}"
      pattern="21|22|23|00|01|02" replacement="00" result="cfg_quarterday"/>
    <Ncs_editValue debug="{cfg_debug}" name="{cfg_quarterday}"
      pattern="03|04|05|06|07|08" replacement="06" result="cfg_quarterday"/>
    <Ncs_editValue debug="{cfg_debug}" name="{cfg_quarterday}"
      pattern="09|10|11|12|13|14" replacement="12" result="cfg_quarterday"/>
    <Ncs_editValue debug="{cfg_debug}" name="{cfg_quarterday}"
      pattern="15|16|17|18|19|20" replacement="18" result="cfg_quarterday"/>
    <Ncs_log text="cfg_quarterday is {cfg_quarterday}"/>
    <!-- get satellite -->
    <Dsm_command class="drl.{sat}.modis.mxd021km.OBJ"
      debug="{cfg_debug}" method="getSpacecraft" result="cfg_satellite"/>
    <!-- get file name  -->
    <Ncs_log text="Getting file name (DATA resource)"/>
    <Dsm_command class="DSM" debug="{cfg_debug}" method="getProductPath" result="drl.{sat}.modis.mxd021km">
      <Object value="drl.{sat}.modis.mxd021km.OBJ"/>
    </Dsm_command>
    <Ncs_log text="File name is {drl.{sat}.modis.mxd021km}"/>
    <!-- get remaining products  -->
    <Ncs_log text="Getting product drl.aquaterra.modis.creflhkm_{tileno}"/>
    <Dsm_command class="DSM" debug="{cfg_debug}" method="fetchProduct" result="drl.aquaterra.modis.creflhkm_{tileno}.OBJ">
      <String value="drl.aquaterra.modis.creflhkm_{tileno}"/>
      <Object value="cfg_pass"/>
      <Object value="cfg_starttime"/>
    </Dsm_command>
    <!-- get file names  -->
    <Dsm_command class="DSM" debug="{cfg_debug}" method="getProductPath" result="drl.aquaterra.modis.creflhkm_{tileno}">
      <Object value="drl.aquaterra.modis.creflhkm_{tileno}.OBJ"/>
    </Dsm_command>
    <Ncs_log text="File name is {drl.aquaterra.modis.creflhkm_{tileno}}"/>
    <Ncs_log text="Getting product drl.aquaterra.modis.geo_{tileno}"/>
    <Dsm_command class="DSM" debug="{cfg_debug}" method="fetchProduct" result="drl.aquaterra.modis.geo_{tileno}.OBJ">
      <String value="drl.aquaterra.modis.geo_{tileno}"/>
      <Object value="cfg_pass"/>
      <Object value="cfg_starttime"/>
    </Dsm_command>
    <!-- get file names  -->
    <Dsm_command class="DSM" debug="{cfg_debug}" method="getProductPath" result="drl.aquaterra.modis.geo_{tileno}">
      <Object value="drl.aquaterra.modis.geo_{tileno}.OBJ"/>
    </Dsm_command>
    <Ncs_log text="File name is {drl.aquaterra.modis.geo_{tileno}}"/>
    <!-- set up the product filename variables  -->
    <!--	foo.filename = filename (with absolute path removed)
		foo.base = filename with extension removed
		foo.ext = extension
		The things we do to get around the limitations of this
		XML-based scripting junk ... -->
    <Ncs_getMatch name="{drl.{sat}.modis.mxd021km}" pattern="[^{/}]*$" result="drl.{sat}.modis.mxd021km.filename"/>
    <Ncs_set name="drl.{sat}.modis.mxd021km.base" value="{drl.{sat}.modis.mxd021km.filename}"/>
    <Ncs_set name="drl.{sat}.modis.mxd021km.ext" value=""/>
    <Ncs_test name="{drl.{sat}.modis.mxd021km.filename}" pattern="\\." result="hasadot"/>
    <Ncs_getMatch name="{drl.{sat}.modis.mxd021km.filename}"
      pattern="[^.]*$" result="drl.{sat}.modis.mxd021km.ext" runFlag="{hasadot}"/>
    <Ncs_editValue name="{drl.{sat}.modis.mxd021km.filename}"
      pattern="\\.{drl.{sat}.modis.mxd021km.ext}$" replacement=""
      result="drl.{sat}.modis.mxd021km.base" runFlag="{hasadot}"/>
    <Ncs_getMatch name="{drl.aquaterra.modis.creflhkm_{tileno}}"
      pattern="[^{/}]*$" result="drl.aquaterra.modis.creflhkm_{tileno}.filename"/>
    <Ncs_set name="drl.aquaterra.modis.creflhkm_{tileno}.base" value="{drl.aquaterra.modis.creflhkm_{tileno}.filename}"/>
    <Ncs_set name="drl.aquaterra.modis.creflhkm_{tileno}.ext" value=""/>
    <Ncs_test name="{drl.aquaterra.modis.creflhkm_{tileno}.filename}"
      pattern="\\." result="hasadot"/>
    <Ncs_getMatch
      name="{drl.aquaterra.modis.creflhkm_{tileno}.filename}"
      pattern="[^.]*$"
      result="drl.aquaterra.modis.creflhkm_{tileno}.ext" runFlag="{hasadot}"/>
    <Ncs_editValue
      name="{drl.aquaterra.modis.creflhkm_{tileno}.filename}"
      pattern="\\.{drl.aquaterra.modis.creflhkm_{tileno}.ext}$"
      replacement="" result="drl.aquaterra.modis.creflhkm_{tileno}.base" runFlag="{hasadot}"/>
    <Ncs_getMatch name="{drl.aquaterra.modis.geo_{tileno}}"
      pattern="[^{/}]*$" result="drl.aquaterra.modis.geo_{tileno}.filename"/>
    <Ncs_set name="drl.aquaterra.modis.geo_{tileno}.base" value="{drl.aquaterra.modis.geo_{tileno}.filename}"/>
    <Ncs_set name="drl.aquaterra.modis.geo_{tileno}.ext" value=""/>
    <Ncs_test name="{drl.aquaterra.modis.geo_{tileno}.filename}"
      pattern="\\." result="hasadot"/>
    <Ncs_getMatch name="{drl.aquaterra.modis.geo_{tileno}.filename}"
      pattern="[^.]*$" result="drl.aquaterra.modis.geo_{tileno}.ext" runFlag="{hasadot}"/>
    <Ncs_editValue name="{drl.aquaterra.modis.geo_{tileno}.filename}"
      pattern="\\.{drl.aquaterra.modis.geo_{tileno}.ext}$"
      replacement="" result="drl.aquaterra.modis.geo_{tileno}.base" runFlag="{hasadot}"/>
    <Dsm_command class="cfg_pass" method="getAos" result="passDate"/>
    <Ncs_date getValue="starttime" name="passDate"/>
    <Ncs_date getValue="scandate" name="cfg_starttime" pattern="yyDDD"/>
    <Ncs_set name="config.type" value="standard"/>
    <Ncs_set name="config.name" value="tcolortile0_01"/>
    <Ncs_set name="output.type" value="geotiff.argb"/>
    <!-- and set up the output file names  -->
    <!-- (accumulate them in allOutputs) -->
    <Ncs_set name="allOutputs" value=""/>
    <Dsm_command class="DSM" debug="{cfg_debug}"
      method="getProductDirectory" result="productDirectory">
      <String value="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff"/>
    </Dsm_command>
    <Ncs_set name="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff" value="{dataDirectory}{productDirectory}{/}MXDcrefl_TrueColor.{tileID}.{scandate}.tif"/>
    <Ncs_set name="allOutputs" value="{allOutputs} {drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff}"/>
    <Ncs_log text="storing drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff at {drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff}"/>
    <Ncs_log text="allOutputs are: {allOutputs}"/>
    <Ncs_set name="input.data" value="{drl.aquaterra.modis.creflhkm_{tileno}}"/>
    <Ncs_set name="geo" value="{drl.aquaterra.modis.geo_{tileno}}"/>
    <Ncs_set name="h2gout" value="{drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff}"/>
    <!-- run the algorithm (to massive applause)  -->
    <Ncs_log text="launching algorithm CREFL {tileID} True Color"/>
    <RunAlgorithm algorithm="cfg_algo.OBJ" debug="{cfg_debug}"/>
    <!-- and clean everything up - walk the outputs
			creating new Products, decorating them with Resources,
			and Ancillaries, and Storing them  -->
    <Ncs_copy copy="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff" source="h2gout"/>
    <Ncs_log runFlag="true" text="Creating new product drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff"/>
    <Dsm_command class="Product" debug="{cfg_debug}" method="new"
      result="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ" runFlag="true">
      <Object value="drl.{sat}.modis.mxd021km.OBJ"/>
      <String value="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff"/>
    </Dsm_command>
    <Dsm_command
      class="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ"
      debug="{cfg_debug}" method="setAlgorithm" runFlag="true">
      <String value="CREFL {tileID} True Color"/>
      <String value="{version}"/>
    </Dsm_command>
    <Ncs_log runFlag="true" text="Adding file {drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff} (as DATA resource)"/>
    <Dsm_command class="DSM" debug="{cfg_debug}"
      method="addDataResource" runFlag="true">
      <Object value="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ"/>
      <String value="{drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff}"/>
    </Dsm_command>
    <Ncs_log runFlag="true" text="Adding contributing product drl.aquaterra.modis.creflhkm_{tileno} (file {drl.aquaterra.modis.creflhkm_{tileno}})"/>
    <Dsm_command
      class="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ"
      debug="{cfg_debug}" method="addContributingProduct" runFlag="true">
      <Object value="drl.aquaterra.modis.creflhkm_{tileno}.OBJ"/>
    </Dsm_command>
    <Ncs_log runFlag="true" text="Adding contributing product drl.aquaterra.modis.geo_{tileno} (file {drl.aquaterra.modis.geo_{tileno}})"/>
    <Dsm_command
      class="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ"
      debug="{cfg_debug}" method="addContributingProduct" runFlag="true">
      <Object value="drl.aquaterra.modis.geo_{tileno}.OBJ"/>
    </Dsm_command>
    <Ncs_log runFlag="true" text="Storing product drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff"/>
    <!-- register crefl with DSM  -->
    <Dsm_command class="DSM" debug="{cfg_debug}" method="storeProduct" runFlag="true">
      <Object value="drl.aquaterra.modis.creflhkm_{tileno}_rgb.geotiff.OBJ"/>
    </Dsm_command>
    <!-- release reserved product to DSM  -->
    <Ncs_log text="Releasing reserved product drl.{sat}.modis.mxd021km"/>
    <Dsm_command class="DSM" debug="{cfg_debug}" method="releaseProduct">
      <Object value="drl.{sat}.modis.mxd021km.OBJ"/>
    </Dsm_command>
    <Ncs_log text="Done with algorithm CREFL {tileID} True Color"/>
  </EXECUTE>
</CONFIGURE>
